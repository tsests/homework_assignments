name: Python Tests

on:
  push:
    branches:
      - main  # Запуск тестов при пуше в ветку main
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main  # Запуск тестов при создании pull request в main
    paths-ignore:
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest  # Используем последнюю версию Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Клонируем репозиторий

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'  # Указываем нужную версию Python (например, 3.8)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Запуск тестов для каждой темы
      - name: Run tests for 1_prac
        id: test_1_prac
        run: |
          pytest tests/test_1_prac.py
        continue-on-error: true

      - name: Run tests for 2_prac
        id: test_2_prac
        run: |
          pytest tests/test_2_prac.py
        continue-on-error: true

      - name: Run tests for 3_prac
        id: test_3_prac
        run: |
          pytest tests/test_3_prac.py
        continue-on-error: true
      
      - name: Run tests for 4_prac
        id: test_4_prac
        run: |
          pytest tests/test_4_prac.py
        continue-on-error: true

      # Обновление статуса эмоджи в README.md в зависимости от результата тестов
      - name: Update README badge for 1_prac
        if: always()
        run: |
          if [[ "${{ steps.test_1_prac.outcome }}" == "success" ]]; then
            sed -i 's/\(\[Типы данных\](1_prac)\) .*/\1 ✅/' README.md
          else
            sed -i 's/\(\[Типы данных\](1_prac)\) .*/\1 ❌/' README.md
          fi

      - name: Update README badge for 2_prac
        if: always()
        run: |
          if [[ "${{ steps.test_2_prac.outcome }}" == "success" ]]; then
            sed -i 's/\(\[Операторы и выражения\](2_prac)\) .*/\1 ✅/' README.md
          else
            sed -i 's/\(\[Операторы и выражения\](2_prac)\) .*/\1 ❌/' README.md
          fi

      - name: Update README badge for 3_prac
        if: always()
        run: |
          if [[ "${{ steps.test_3_prac.outcome }}" == "success" ]]; then
            sed -i 's/\(\[Поток команд или структурное программирование в Python\](3_prac)\) .*/\1 ✅/' README.md
          else
            sed -i 's/\(\[Поток команд или структурное программирование в Python\](3_prac)\) .*/\1 ❌/' README.md
          fi

      - name: Update README badge for 4_prac
        if: always()
        run: |
          if [[ "${{ steps.test_4_prac.outcome }}" == "success" ]]; then
            sed -i 's/\(\[Структуры данных\](4_prac)\) .*/\1 ✅/' README.md
          else
            sed -i 's/\(\[Структуры данных\](4_prac)\) .*/\1 ❌/' README.md
          fi
          
      # Коммит и пуш изменений в README.md
      - name: Commit and push badge updates
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md
          git commit -m "Update README with test results" || echo "No changes to commit"
          git push
